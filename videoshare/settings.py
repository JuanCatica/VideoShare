"""
Django settings for videoshare project.

Generated by 'django-admin startproject' using Django 2.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import configparser 
import requests
from secrets import get_secret

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'mi@ocai1ts^%-7=ze4$gp6$ssmk66z@*g-_ehc6fimt@slat#h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'acceso',
    'core',
    'contestservice',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'videoshare.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'videoshare.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}


# -------------------------------------
# LECTURA DE VARIABLES DE CONFIGURACIÓN
INTANCE_ID = "Sin Id :("
try:
    r = requests.get("http://169.254.169.254/latest/meta-data/local-ipv4",timeout=1)
    INTANCE_ID = r.text
except Exception as e:
    pass

config = configparser.ConfigParser()
config.read(os.path.join(BASE_DIR, "config.conf"))
SECRET_NAME = config.get("SECRETS","name")
REGION_NAME = config.get("SECRETS","region")
CONFIGS = get_secret(SECRET_NAME, REGION_NAME)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': CONFIGS["rds_db"],
        'USER': CONFIGS["rds_user"],
        'PASSWORD': CONFIGS["rds_pass"],
        'HOST': CONFIGS["rds_url"],
        'PORT': CONFIGS["rds_port"],
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'es'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'America/Bogota'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# JUAN | 

# Definición de la URL de Login.
LOGIN_URL = '/login/'

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# DIRECCION DE LAS IMAGENES GENERADAS A PARTIR DE LOS VIDEOS
MEDIA_IMG_VIDEO = "/videos_image/"
MEDIA_IMG_VIDEO_ROOT = os.path.join(MEDIA_ROOT, "videos_image")

# videos_ffmpeg
MEDIA_VIDEO = "/videos/"
MEDIA_VIDEO_ROOT = os.path.join(MEDIA_ROOT, "videos")

# videos_ffmpeg
MEDIA_VIDEO_FFMPEG = "/videos_ffmpeg/"
MEDIA_VIDEO_FFMPEG_ROOT = os.path.join(MEDIA_ROOT, "videos_ffmpeg")